//
// Created by 张子栋 on 2021/6/11.
//

/*
 * 【问题描述】
 * 有一个有趣的古典数学问题：有一对兔子，从出生后第3个月起每个月都生1对兔子，小兔子长到第3个月后每个月又生1对兔子。假设所有兔子都不死，问每个月兔子的总对数为多少？
 * 提示：不满1个月的为小兔子，满1个月不满2个月的为中兔子，满3个月以上的为老兔子。每对老兔子每个月会生1对小兔子。因此，每个月的兔子总数依次为1,1,2,3,5,8,13,…。这
 * 就是Fibonacci数列。该数列的递归定义如下：f(n)=1 (n等于1或2)；f(n)= f(n-1)+ f(n-2)  (n>2)
 * 请编写递归函数int fib(int n)，求出第n个月兔子的总对数。
 *
 * 【输入形式】
 * 输入一个正整数n，表示求第n个月兔子的总对数。
 * 【输出形式】
 * 输出为一行，第n个月兔子的总对数。
 * 【样例输入】
 * 2
 * 【样例输出】
 * 1
 */

#include <iostream>

using namespace std;

void fib(int s) {
    int d = 1, f = 1, sum = 0, n = 1, t = 0;
    while (n < s) {
        n++;
        t = f;
        f = d;
        d += t;
        sum = d + f;
    }
    cout << sum - d << endl;
}

int main() {
    int s;
    cin >> s;
    if (s != 1)
        fib(s);
    else
        cout << 1 << endl;
    return 0;
}
